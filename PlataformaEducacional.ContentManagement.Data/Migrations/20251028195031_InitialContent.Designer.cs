// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacional.ContentManagement.Data.Context;

#nullable disable

namespace PlataformaEducacional.ContentManagement.Data.Migrations
{
    [DbContext(typeof(ContentContext))]
    [Migration("20251028195031_InitialContent")]
    partial class InitialContent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("PlataformaEducacional.ContentManagement.Domain.Courses.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacional.ContentManagement.Domain.Lessons.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId", "Title")
                        .HasDatabaseName("IX_Lesson_Course_Title");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacional.ContentManagement.Domain.Courses.Course", b =>
                {
                    b.OwnsOne("PlataformaEducacional.ContentManagement.Domain.ValueObjects.Syllabus", "Syllabus", b1 =>
                        {
                            b1.Property<Guid>("CourseId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("varchar(255)")
                                .HasColumnName("Description");

                            b1.Property<int>("Workload")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Workload");

                            b1.HasKey("CourseId");

                            b1.ToTable("Courses");

                            b1.WithOwner()
                                .HasForeignKey("CourseId");
                        });

                    b.Navigation("Syllabus")
                        .IsRequired();
                });

            modelBuilder.Entity("PlataformaEducacional.ContentManagement.Domain.Lessons.Lesson", b =>
                {
                    b.HasOne("PlataformaEducacional.ContentManagement.Domain.Courses.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("PlataformaEducacional.ContentManagement.Domain.Courses.Course", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
