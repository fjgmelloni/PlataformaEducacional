// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacional.StudentAdministration.Data;

#nullable disable

namespace PlataformaEducacional.StudentAdministration.Data.Migrations
{
    [DbContext(typeof(StudentAdministrationContext))]
    partial class StudentAdministrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentId")
                        .IsUnique();

                    b.HasIndex("VerificationCode")
                        .IsUnique();

                    b.ToTable("Certificates", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnrollmentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.LessonProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnrollmentId");

                    b.ToTable("LessonProgresses", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Certificate", b =>
                {
                    b.HasOne("PlataformaEducacional.StudentAdministration.Domain.Enrollment", "Enrollment")
                        .WithOne("Certificate")
                        .HasForeignKey("PlataformaEducacional.StudentAdministration.Domain.Certificate", "EnrollmentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Enrollment");
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Enrollment", b =>
                {
                    b.HasOne("PlataformaEducacional.StudentAdministration.Domain.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.OwnsOne("PlataformaEducacional.StudentAdministration.Domain.LearningHistory", "LearningHistory", b1 =>
                        {
                            b1.Property<Guid>("EnrollmentId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("CompletionDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("CompletionDate");

                            b1.Property<int>("CourseStatus")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(0)
                                .HasColumnName("CourseStatus");

                            b1.Property<double>("OverallProgress")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("REAL")
                                .HasDefaultValue(0.0)
                                .HasColumnName("OverallProgress");

                            b1.Property<int>("TotalLessons")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(0)
                                .HasColumnName("TotalLessons");

                            b1.HasKey("EnrollmentId");

                            b1.ToTable("Enrollments");

                            b1.WithOwner()
                                .HasForeignKey("EnrollmentId");
                        });

                    b.Navigation("LearningHistory")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.LessonProgress", b =>
                {
                    b.HasOne("PlataformaEducacional.StudentAdministration.Domain.Enrollment", "Enrollment")
                        .WithMany("LessonProgresses")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Enrollment");
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Enrollment", b =>
                {
                    b.Navigation("Certificate");

                    b.Navigation("LessonProgresses");
                });

            modelBuilder.Entity("PlataformaEducacional.StudentAdministration.Domain.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
